{
  "version": 3,
  "sources": ["../src/infinite-scroller.js", "../src/integer-iterator.js", "../src/hebrew-numeral.js", "../src/text-filter.js", "../src/display-range.js", "../src/title.js", "../src/location.js", "../src/fuzzy.js", "../src/event-emitter.js", "../src/index.js", "../components/Line.js", "../components/Page.js", "../components/ParshaPicker.js", "../components/ParshaPicker.js", "../components/utils.js", "../components/ParshaResult.js", "../components/ParshaPicker.js", "../components/ParshaPicker.js", "../components/SelectList.js", "../components/SelectList.js", "../components/SelectList.js", "../components/Search.js", "../index.js"],
  "sourcesContent": ["let alreadyInFlight = false\nconst oneAtATime = (promise) => {\n  if (alreadyInFlight) return Promise.resolve()\n  alreadyInFlight = true\n  return promise()\n    .then((val) => {\n      alreadyInFlight = false\n      return val\n    })\n}\n\nconst InfiniteScroller = {\n  new: ({ container, fetchPreviousContent, fetchNextContent }) => ({\n    attach: () => container.addEventListener('scroll', (e) => {\n      const scrollView = e.target\n\n      const hiddenAboveHeight = scrollView.scrollTop\n      const height = scrollView.clientHeight\n\n      const hiddenBelowHeight = scrollView.scrollHeight - (scrollView.clientHeight + scrollView.scrollTop)\n\n      if (hiddenAboveHeight < 0.5 * height) {\n        oneAtATime(() => fetchPreviousContent.fetch())\n          .then(fetched => {\n            if (!fetched) return\n\n            const belowHeight = scrollView.scrollHeight - scrollView.scrollTop\n\n            fetchPreviousContent.render(fetched)\n\n            scrollView.scrollTop = scrollView.scrollHeight - belowHeight\n          })\n      } else if (hiddenBelowHeight < 0.5 * height) {\n        oneAtATime(() => fetchNextContent.fetch())\n          .then(fetched => {\n            if (fetched) fetchNextContent.render(fetched)\n          })\n      }\n    })\n  })\n}\n\nmodule.exports = InfiniteScroller\n", "module.exports = {\n  new: ({ startingAt }) => {\n    let previousCount = 0\n    let nextCount = 0\n\n    return {\n      previous: () => {\n        previousCount += 1\n        return startingAt - previousCount\n      },\n      next: () => {\n        nextCount += 1\n        return startingAt + nextCount - 1\n      }\n    }\n  }\n}\n", "const letters = [\n    {glyph: '\u05D0', value: 1},\n    {glyph: '\u05D1', value: 2},\n    {glyph: '\u05D2', value: 3},\n    {glyph: '\u05D3', value: 4},\n    {glyph: '\u05D4', value: 5},\n    {glyph: '\u05D5', value: 6},\n    {glyph: '\u05D6', value: 7},\n    {glyph: '\u05D7', value: 8},\n    {glyph: '\u05D8', value: 9},\n    {glyph: '\u05D9', value: 10},\n    {glyph: '\u05DB', value: 20},\n    {glyph: '\u05DC', value: 30},\n    {glyph: '\u05DE', value: 40},\n    {glyph: '\u05E0', value: 50},\n    {glyph: '\u05E1', value: 60},\n    {glyph: '\u05E2', value: 70},\n    {glyph: '\u05E4', value: 80},\n    {glyph: '\u05E6', value: 90},\n    {glyph: '\u05E7', value: 100},\n    {glyph: '\u05E8', value: 200},\n    {glyph: '\u05E9', value: 300},\n    {glyph: '\u05EA', value: 400}\n]\n  .reverse()\n\nconst hebrewNumeral = (n) => {\n  if (n <= 0) return ''\n  if (n === 15) return '\u05D8\u05D5'\n  if (n === 16) return '\u05D8\u05D6'\n\n  let i = 0\n  while (n < letters[i].value) {\n    ++i\n  }\n\n  const letter = letters[i]\n\n  return `${letter.glyph}${hebrewNumeral(n - letter.value)}`\n}\n\nmodule.exports = hebrewNumeral\n", "const NUN_HAFUCHA = '\u05C6'\n\nconst ketiv = (text) => text\n  .replace('#(\u05E4)', '')\n  .replace(`#(${NUN_HAFUCHA})`, ` ${NUN_HAFUCHA}`)\n  .split(' ')\n  .map((maqafSeparatedWord) => maqafSeparatedWord\n    .split('\u05BE')\n    .map(word => {\n      const parts = word.split('#')\n\n      if (parts.length <= 1) {\n        // i.e. there is no `#`, so just take the word\n        return parts[0]\n      }\n\n      return `{${parts\n        .slice(1)\n        .map(bracketed => bracketed.slice(1, -1))\n        .join(' ')}}`\n    })\n    .join('\u05BE')\n  )\n  .join(' ')\n\nconst kri = (text) => text\n  .replace(/\u05BE/g, ' ')\n  .replace('#(\u05E4)', '')\n  .replace(`#(${NUN_HAFUCHA})`, ` ${NUN_HAFUCHA}`)\n  .split(' ')\n  .map((word) => {\n    const parts = word.split('#')\n\n    return parts[0]\n  })\n  .join(' ')\n  .replace(new RegExp(`[^\u05D0-\u05EA\\\\s${NUN_HAFUCHA}]`, 'g'), '')\n\nmodule.exports = ({ text, annotated }) => annotated ? ketiv(text) : kri(text)\n", "const hebrewNumeralFromInteger = require('./hebrew-numeral')\nconst parshiyot = require('../build/parshiyot.json')\n\nvar asRange = (strings) => {\n  if (!strings.length) {\n    return ''\n  }\n\n  if (strings.length === 1) {\n    return strings[0]\n  }\n\n  return [strings[0], strings[strings.length - 1]].join('-')\n}\n\nconst aliyotStrings = [\n  '\u05E8\u05D0\u05E9\u05D5\u05DF',\n  '\u05E9\u05E0\u05D9',\n  '\u05E9\u05DC\u05D9\u05E9\u05D9',\n  '\u05E8\u05D1\u05D9\u05E2\u05D9',\n  '\u05D7\u05DE\u05D9\u05E9\u05D9',\n  '\u05E9\u05E9\u05D9',\n  '\u05E9\u05D1\u05D9\u05E2\u05D9',\n  '\u05DE\u05E4\u05D8\u05D9\u05E8'\n]\n\nconst parshaName = (verses) => parshiyot\n  .find(({ ref }) => verses\n    .some(({ book: b, chapter: c, verse: v }) => ref.b === b && ref.c === c && ref.v === v\n    )\n  ).he\n\nconst aliyotNames = (aliyot, verses) => aliyot\n  .filter((aliyah) => aliyah > 0 && aliyah <= aliyotStrings.length)\n  .map((aliyah) => aliyotStrings[aliyah - 1])\n  .map(aliyah => {\n    if (aliyah === '\u05E8\u05D0\u05E9\u05D5\u05DF') {\n      return parshaName(verses)\n    }\n\n    return aliyah\n  })\n\nconst asVersesRange = (verses) => asRange(verses.map((verse) => {\n  const components = []\n\n  if (verse.verse === 1) {\n    components.push(verse.chapter)\n  }\n\n  components.push(verse.verse)\n\n  return components\n    .map((num) => hebrewNumeralFromInteger(num))\n    .join(':')\n}))\n\nconst asAliyotRange = (aliyot, verses) => {\n  if (!aliyot.length) {\n    return ''\n  }\n\n  const aliyotByName = aliyotNames(aliyot, verses)\n\n  return aliyotByName[0] + (aliyotByName[1] ? ` [${aliyotByName[1]}]` : '')\n}\n\nmodule.exports = { asVersesRange, asAliyotRange }\n", "module.exports = (parshiyot) => {\n  return parshiyot.join(' \u2013 ')\n}\n", "const toc = require('../build/table-of-contents.json')\nconst estherToc = require('../build/table-of-contents-esther.json')\n\nmodule.exports = ({ ref: { b: book, c: chapter, v: verse }, scroll }) => {\n  const { p: pageNumber, l: lineNumber } = (scroll === 'torah' ? toc : estherToc)[book][chapter][verse]\n\n  return { pageNumber, lineNumber }\n}\n", "const hasEveryCharacterInOrder = needle => item => (new RegExp(needle\n  .split('')\n  .join('.*')\n, 'i')).test(item)\n\nconst matchIndexes = (needle, match) => {\n  const needleChars = needle.split('')\n  const matchChars = match.split('')\n\n  const indexes = []\n  let needleIndex = 0\n\n  for (let i = 0; i < matchChars.length; i++) {\n    if (needleChars[needleIndex].toLowerCase() === matchChars[i].toLowerCase()) {\n      indexes.push(i)\n      ++needleIndex\n\n      if (needleIndex >= needleChars.length) break\n    }\n  }\n\n  return indexes\n}\n\nconst indexScore = (needle, match) => {\n  const indexes = matchIndexes(needle, match)\n\n  return indexes\n    .map(index => index - indexes[0])\n    .reduce((a, b) => a + b, 0)\n}\n\nconst bestMatch = (needle, getSearchTerms) => candidate => {\n  const { minScore, index } = getSearchTerms(candidate)\n    .map(term => hasEveryCharacterInOrder(needle)(term) ? indexScore(needle, term) : Infinity)\n    .reduce(({ minScore, index }, score, i) => {\n      if (score < minScore) return { minScore: score, index: i }\n\n      return { minScore, index }\n    }, { minScore: Infinity, index: 0 })\n\n  if (!isFinite(minScore)) return { score: minScore }\n\n  return {\n    score: minScore,\n    item: candidate,\n    match: { index, indexes: matchIndexes(needle, getSearchTerms(candidate)[index]) }\n  }\n}\n\nmodule.exports = (haystack, needle, getSearchTerms = x => [x]) => haystack\n  .map(bestMatch(needle, getSearchTerms))\n  .filter(({ score }) => isFinite(score))\n  .sort((match, other) => {\n    const matchScore = match.score\n    const otherScore = other.score\n\n    const scoreDiff = matchScore - otherScore\n\n    if (scoreDiff === 0) {\n      return match.match.indexes[0] - other.match.indexes[0]\n    }\n\n    return scoreDiff\n  })\n", "export default {\n  new: () => {\n    const listeners = []\n\n    return {\n      emit: (evt, payload) => {\n        listeners\n          .filter(listener => listener.evt === evt)\n          .forEach(listener => {\n            listener.callback(payload)\n          })\n      },\n      on: (evt, callback) => {\n        listeners.push({ evt, callback })\n      }\n    }\n  }\n}\n", "import InfiniteScroller from './infinite-scroller'\nimport IntegerIterator from './integer-iterator'\nconst hebrewNumeralFromInteger = require('./hebrew-numeral')\nconst textFilter = require('./text-filter')\nconst displayRange = require('./display-range')\nconst title = require('./title')\nconst physicalLocationFromRef = require('./location')\n\nexport { textFilter, hebrewNumeralFromInteger, displayRange, InfiniteScroller, IntegerIterator, title, physicalLocationFromRef }\n", "import { displayRange, textFilter } from '../src'\n\nconst ktivKriAnnotation = text => text.replace(/[{]/g, `<span class=\"ktiv-kri\">`).replace(/[}]/g, `</span>`)\n\nconst petuchaClass = (isPetucha) => isPetucha ? 'mod-petucha' : ''\nconst setumaClass = (column) => column.length > 1 ? 'mod-setuma' : ''\n\nconst Line = ({ text, verses, aliyot, isPetucha }) => `\n  <div class=\"line ${petuchaClass(isPetucha)}\">\n    ${text.map((column) => (`\n      <div class=\"column\">\n        ${column.map((fragment) => (`\n          <span class=\"fragment ${setumaClass(column)} mod-annotations-on\">${ktivKriAnnotation(textFilter({ text: fragment, annotated: true }))}</span>\n          <span class=\"fragment ${setumaClass(column)} mod-annotations-off\">${ktivKriAnnotation(textFilter({ text: fragment, annotated: false }))}</span>\n        `)).join('')}\n      </div>\n    `)).join('')}\n    <span class=\"location-indicator mod-verses\">${displayRange.asVersesRange(verses)}</span>\n    <span class=\"location-indicator mod-aliyot\" data-target-id=\"aliyot-range\">${displayRange.asAliyotRange(aliyot, verses)}</span>\n  </div>\n`\n\nexport default Line\n", "import Line from './Line'\n\nconst Page = (lines) => `\n  <table>\n    ${lines.map((line) => (`\n      <tr>\n        <td>${Line(line)}</td>\n      </tr>\n    `)).join('')}\n  </table>\n`\n\nexport default Page\n", "/* global gtag */\n\nimport parshiyot from '../build/parshiyot.json'\nimport readingSchedule from '../build/schedule.json'\nimport fuzzy from '../src/fuzzy'\nimport utils from './utils'\nimport ParshaResult, { NoResults } from './ParshaResult'\n\nconst { htmlToElement } = utils\n\nconst Parsha = ({ ref, he, scroll }) => `\n  <li\n    class=\"parsha\"\n    data-target-id=\"parsha\"\n    data-jump-to-book=\"${ref.b}\"\n    data-jump-to-chapter=\"${ref.c}\"\n    data-jump-to-verse=\"${ref.v}\"\n    data-scroll=\"${scroll}\"\n  >\n    ${he}\n  </li>\n  `\n\nconst Book = (book) => `\n  <li class=\"parsha-book\">\n    <ol class=\"parsha-list\">\n      ${book.map(b => Parsha({ ...b, scroll: 'torah' })).join('')}\n    </ol>\n  </li>\n`\n\nconst refFromLabel = ({ label }) => parshiyot\n  .find(({ he }) => label.startsWith(he))\n  .ref\n\nconst ComingUpReading = ({ label, date, datetime }) => {\n  const { b: book, c: chapter, v: verse } = refFromLabel({ label })\n  return `\n  <li style=\"display: table-cell; width: calc(100% / 3); padding: 0 0.5em;\">\n    <div class=\"stack small\" style=\"display: flex; flex-direction: column; align-items: center;\">\n      <button\n        data-target-class=\"coming-up-reading\"\n        data-jump-to-book=\"${book}\"\n        data-jump-to-chapter=\"${chapter}\"\n        data-jump-to-verse=\"${verse}\"\n        data-scroll=\"torah\"\n        class=\"coming-up-button\"\n      >${label}</button>\n      <time class=\"coming-up-date\" datetime=\"${datetime}\">${date}</time>\n    </div>\n  </li>\n  `\n}\n\nconst comingUpReadings = readingSchedule\n  .filter(reading => new Date(reading.datetime) > new Date())\n  .slice(0, 3)\n\nconst ComingUp = () => `\n  <section dir=\"ltr\" id=\"coming-up\" class=\"section mod-alternate mod-padding\">\n    <div class=\"stack medium\">\n      <label style=\"display: block; text-align: center; text-transform: uppercase; font-size: 0.8em; font-weight: 700; color: hsla(0, 0%, 0%, 0.5);\">Coming up</label>\n      <div style=\"overflow-x: auto;\">\n        <ol class=\"cluster\" style=\"list-style: none; display: table; margin-left: auto; margin-right: auto; white-space: nowrap;\">\n          ${comingUpReadings\n            .map(ComingUpReading)\n            .join('')\n          }\n        </ol>\n      </div>\n    </div>\n  </section>\n`\n\nconst Browse = () => `\n  <div class=\"browse\">\n    <h2 class=\"section-heading\">\u05EA\u05D5\u05E8\u05D4</h2>\n    <ol class=\"parsha-books\">\n      ${parshiyot\n        .reduce((books, parsha) => {\n          const book = parsha.ref.b\n          books[book] = books[book] || []\n          books[book].push(parsha)\n          return books\n        }, [])\n        .map(Book)\n        .join('')\n      }\n    </ol>\n\n    <h2 class=\"section-heading\">\u05DE\u05D2\u05D9\u05DC\u05D5\u05EA</h2>\n    <ol class=\"parsha-books\">\n      <li class=\"parsha-book\">\n        <ol class=\"parsha-list\">\n          ${Parsha({ ref: { b: 1, c: 1, v: 1 }, he: '\u05D0\u05E1\u05EA\u05E8', scroll: 'esther' })}\n        </ol>\n      </li>\n    </ol>\n  </div>\n`\n\nconst ParshaPicker = (search, searchEmitter, jumpToRef) => {\n  const self = htmlToElement(`\n    <div class=\"parsha-picker\">\n      <div class=\"stack xlarge\">\n        <div class=\"centerize\">\n          <div id=\"search\" style=\"display: inline-block;\"></div>\n        </div>\n        ${ComingUp()}\n        ${Browse()}\n      </div>\n    </div>\n  `)\n\n  searchEmitter.on('selection', (selected) => {\n    gtag('event', 'search_selection', {\n      event_category: 'navigation',\n      event_label: selected.querySelector('[data-target-class=\"result-hebrew\"]').textContent.trim()\n    })\n\n    const result = selected.querySelector('[data-target-class=\"parsha-result\"]')\n\n    jumpToRef({ ref: result, scroll: result.getAttribute('data-scroll') })\n  })\n\n  searchEmitter.on('search', query => {\n    self.querySelector('.browse').classList.add('u-hidden')\n    self.querySelector('#coming-up').classList.add('u-hidden')\n    gtag('event', 'search', {\n      event_category: 'navigation',\n      event_label: query\n    })\n  })\n\n  searchEmitter.on('clear', () => {\n    self.querySelector('.browse').classList.remove('u-hidden')\n    self.querySelector('#coming-up').classList.remove('u-hidden')\n  })\n\n  self.querySelector('#search').parentNode.replaceChild(search, self.querySelector('#search'))\n\n  ;[...self.querySelectorAll('[data-target-id=\"parsha\"]')]\n    .forEach((parsha) => {\n      parsha.addEventListener('click', (e) => {\n        gtag('event', 'browse_selection', {\n          event_category: 'navigation',\n          event_label: e.target.textContent.trim()\n        })\n        jumpToRef({ ref: e.target, scroll: e.target.getAttribute('data-scroll') })\n      })\n    })\n\n  ;[...self.querySelectorAll('[data-target-class=\"coming-up-reading\"]')]\n    .forEach(comingUpReading => {\n      comingUpReading.addEventListener('click', e => {\n        gtag('event', 'coming_up_selection', {\n          event_category: 'navigation',\n          event_label: e.target.textContent.trim()\n        })\n\n        jumpToRef({ ref: e.target, scroll: e.target.getAttribute('data-scroll') })\n      })\n    })\n\n  return self\n}\n\nconst searchables = [\n  ...parshiyot.map(p => ({ ...p, scroll: 'torah' })),\n  {\n    he: '\u05D0\u05E1\u05EA\u05E8',\n    en: 'Esther',\n    ref: { b: 1, c: 1, v: 1 },\n    scroll: 'esther'\n  }\n]\n\nconst searchResults = (query) => {\n  const results = fuzzy(searchables, query, parsha => [parsha.he, parsha.en])\n\n  return results.length ? results : [{\n    item: 'No results',\n    match: { index: 0, indexes: [] }\n  }]\n}\n\nconst top = (n) => (_, i) => i < n\n\nconst search = query => searchResults(query)\n  .filter(top(5))\n  .map(result => result.item === 'No results'\n    ? NoResults()\n    : ParshaResult(result)\n  )\n\nexport { search }\n\nexport default ParshaPicker\n", "/* global gtag */\n\nimport parshiyot from '../build/parshiyot.json'\nimport readingSchedule from '../build/schedule.json'\nimport fuzzy from '../src/fuzzy'\nimport utils from './utils'\nimport ParshaResult, { NoResults } from './ParshaResult'\n\nconst { htmlToElement } = utils\n\nconst Parsha = ({ ref, he, scroll }) => `\n  <li\n    class=\"parsha\"\n    data-target-id=\"parsha\"\n    data-jump-to-book=\"${ref.b}\"\n    data-jump-to-chapter=\"${ref.c}\"\n    data-jump-to-verse=\"${ref.v}\"\n    data-scroll=\"${scroll}\"\n  >\n    ${he}\n  </li>\n  `\n\nconst Book = (book) => `\n  <li class=\"parsha-book\">\n    <ol class=\"parsha-list\">\n      ${book.map(b => Parsha({ ...b, scroll: 'torah' })).join('')}\n    </ol>\n  </li>\n`\n\nconst refFromLabel = ({ label }) => parshiyot\n  .find(({ he }) => label.startsWith(he))\n  .ref\n\nconst ComingUpReading = ({ label, date, datetime }) => {\n  const { b: book, c: chapter, v: verse } = refFromLabel({ label })\n  return `\n  <li style=\"display: table-cell; width: calc(100% / 3); padding: 0 0.5em;\">\n    <div class=\"stack small\" style=\"display: flex; flex-direction: column; align-items: center;\">\n      <button\n        data-target-class=\"coming-up-reading\"\n        data-jump-to-book=\"${book}\"\n        data-jump-to-chapter=\"${chapter}\"\n        data-jump-to-verse=\"${verse}\"\n        data-scroll=\"torah\"\n        class=\"coming-up-button\"\n      >${label}</button>\n      <time class=\"coming-up-date\" datetime=\"${datetime}\">${date}</time>\n    </div>\n  </li>\n  `\n}\n\nconst comingUpReadings = readingSchedule\n  .filter(reading => new Date(reading.datetime) > new Date())\n  .slice(0, 3)\n\nconst ComingUp = () => `\n  <section dir=\"ltr\" id=\"coming-up\" class=\"section mod-alternate mod-padding\">\n    <div class=\"stack medium\">\n      <label style=\"display: block; text-align: center; text-transform: uppercase; font-size: 0.8em; font-weight: 700; color: hsla(0, 0%, 0%, 0.5);\">Coming up</label>\n      <div style=\"overflow-x: auto;\">\n        <ol class=\"cluster\" style=\"list-style: none; display: table; margin-left: auto; margin-right: auto; white-space: nowrap;\">\n          ${comingUpReadings\n            .map(ComingUpReading)\n            .join('')\n          }\n        </ol>\n      </div>\n    </div>\n  </section>\n`\n\nconst Browse = () => `\n  <div class=\"browse\">\n    <h2 class=\"section-heading\">\u05EA\u05D5\u05E8\u05D4</h2>\n    <ol class=\"parsha-books\">\n      ${parshiyot\n        .reduce((books, parsha) => {\n          const book = parsha.ref.b\n          books[book] = books[book] || []\n          books[book].push(parsha)\n          return books\n        }, [])\n        .map(Book)\n        .join('')\n      }\n    </ol>\n\n    <h2 class=\"section-heading\">\u05DE\u05D2\u05D9\u05DC\u05D5\u05EA</h2>\n    <ol class=\"parsha-books\">\n      <li class=\"parsha-book\">\n        <ol class=\"parsha-list\">\n          ${Parsha({ ref: { b: 1, c: 1, v: 1 }, he: '\u05D0\u05E1\u05EA\u05E8', scroll: 'esther' })}\n        </ol>\n      </li>\n    </ol>\n  </div>\n`\n\nconst ParshaPicker = (search, searchEmitter, jumpToRef) => {\n  const self = htmlToElement(`\n    <div class=\"parsha-picker\">\n      <div class=\"stack xlarge\">\n        <div class=\"centerize\">\n          <div id=\"search\" style=\"display: inline-block;\"></div>\n        </div>\n        ${ComingUp()}\n        ${Browse()}\n      </div>\n    </div>\n  `)\n\n  searchEmitter.on('selection', (selected) => {\n    gtag('event', 'search_selection', {\n      event_category: 'navigation',\n      event_label: selected.querySelector('[data-target-class=\"result-hebrew\"]').textContent.trim()\n    })\n\n    const result = selected.querySelector('[data-target-class=\"parsha-result\"]')\n\n    jumpToRef({ ref: result, scroll: result.getAttribute('data-scroll') })\n  })\n\n  searchEmitter.on('search', query => {\n    self.querySelector('.browse').classList.add('u-hidden')\n    self.querySelector('#coming-up').classList.add('u-hidden')\n    gtag('event', 'search', {\n      event_category: 'navigation',\n      event_label: query\n    })\n  })\n\n  searchEmitter.on('clear', () => {\n    self.querySelector('.browse').classList.remove('u-hidden')\n    self.querySelector('#coming-up').classList.remove('u-hidden')\n  })\n\n  self.querySelector('#search').parentNode.replaceChild(search, self.querySelector('#search'))\n\n  ;[...self.querySelectorAll('[data-target-id=\"parsha\"]')]\n    .forEach((parsha) => {\n      parsha.addEventListener('click', (e) => {\n        gtag('event', 'browse_selection', {\n          event_category: 'navigation',\n          event_label: e.target.textContent.trim()\n        })\n        jumpToRef({ ref: e.target, scroll: e.target.getAttribute('data-scroll') })\n      })\n    })\n\n  ;[...self.querySelectorAll('[data-target-class=\"coming-up-reading\"]')]\n    .forEach(comingUpReading => {\n      comingUpReading.addEventListener('click', e => {\n        gtag('event', 'coming_up_selection', {\n          event_category: 'navigation',\n          event_label: e.target.textContent.trim()\n        })\n\n        jumpToRef({ ref: e.target, scroll: e.target.getAttribute('data-scroll') })\n      })\n    })\n\n  return self\n}\n\nconst searchables = [\n  ...parshiyot.map(p => ({ ...p, scroll: 'torah' })),\n  {\n    he: '\u05D0\u05E1\u05EA\u05E8',\n    en: 'Esther',\n    ref: { b: 1, c: 1, v: 1 },\n    scroll: 'esther'\n  }\n]\n\nconst searchResults = (query) => {\n  const results = fuzzy(searchables, query, parsha => [parsha.he, parsha.en])\n\n  return results.length ? results : [{\n    item: 'No results',\n    match: { index: 0, indexes: [] }\n  }]\n}\n\nconst top = (n) => (_, i) => i < n\n\nconst search = query => searchResults(query)\n  .filter(top(5))\n  .map(result => result.item === 'No results'\n    ? NoResults()\n    : ParshaResult(result)\n  )\n\nexport { search }\n\nexport default ParshaPicker\n", "const htmlToElement = (html) => {\n  const template = document.createElement('template')\n  html = html.trim() // Never return a text node of whitespace as the result\n  template.innerHTML = html\n  return template.content.firstChild\n}\n\nconst getKeys = (key) => {\n  if (typeof key === 'string') return { key, ctrl: false }\n\n  return key\n}\n\nconst whenKey = (key, callback) => e => {\n  const { key: k, ctrl } = getKeys(key)\n\n  if (e.ctrlKey === ctrl && e.key === k && !e.repeat) callback(e)\n}\n\nconst purgeNode = (node) => {\n  while (node.firstChild) node.removeChild(node.firstChild)\n}\n\nexport default {\n  htmlToElement,\n  whenKey,\n  purgeNode\n}\n", "import utils from './utils'\n\nconst { htmlToElement } = utils\n\nconst decorateString = ({ string, atIndexes, withDecoration }) => {\n  let indexesIndex = 0\n  return string\n    .split('')\n    .map((char, i) => {\n      if (atIndexes[indexesIndex] !== i) return char\n\n      ++indexesIndex\n      return withDecoration(char)\n    }, '')\n    .join('')\n}\n\nconst strongify = (c) => (`<strong>${c}</strong>`)\n\nconst ParshaResult = ({ match, item }) => htmlToElement(`\n  <div data-target-class=\"parsha-result\" data-jump-to-book=\"${item.ref.b}\" data-jump-to-chapter=\"${item.ref.c}\" data-jump-to-verse=\"${item.ref.v}\" data-scroll=\"${item.scroll}\">\n    <p class=\"search-result-tag\" data-target-class=\"result-hebrew\">${match.index === 0 ? decorateString({\n      string: item.he,\n      atIndexes: match.indexes,\n      withDecoration: strongify\n    }) : item.he}\n    </p>\n    <p class=\"search-result-tag\">${match.index === 1 ? decorateString({\n      string: item.en,\n      atIndexes: match.indexes,\n      withDecoration: strongify\n    }) : item.en}\n    </p>\n  </div>\n`)\n\nexport default ParshaResult\n\nconst NoResults = () => htmlToElement(`<p class=\"\" style=\"text-align: center; color: hsla(0, 0%, 0%, 0.5);\">\n  No results\n</p>\n`)\n\nexport { NoResults }\n", "/* global gtag */\n\nimport parshiyot from '../build/parshiyot.json'\nimport readingSchedule from '../build/schedule.json'\nimport fuzzy from '../src/fuzzy'\nimport utils from './utils'\nimport ParshaResult, { NoResults } from './ParshaResult'\n\nconst { htmlToElement } = utils\n\nconst Parsha = ({ ref, he, scroll }) => `\n  <li\n    class=\"parsha\"\n    data-target-id=\"parsha\"\n    data-jump-to-book=\"${ref.b}\"\n    data-jump-to-chapter=\"${ref.c}\"\n    data-jump-to-verse=\"${ref.v}\"\n    data-scroll=\"${scroll}\"\n  >\n    ${he}\n  </li>\n  `\n\nconst Book = (book) => `\n  <li class=\"parsha-book\">\n    <ol class=\"parsha-list\">\n      ${book.map(b => Parsha({ ...b, scroll: 'torah' })).join('')}\n    </ol>\n  </li>\n`\n\nconst refFromLabel = ({ label }) => parshiyot\n  .find(({ he }) => label.startsWith(he))\n  .ref\n\nconst ComingUpReading = ({ label, date, datetime }) => {\n  const { b: book, c: chapter, v: verse } = refFromLabel({ label })\n  return `\n  <li style=\"display: table-cell; width: calc(100% / 3); padding: 0 0.5em;\">\n    <div class=\"stack small\" style=\"display: flex; flex-direction: column; align-items: center;\">\n      <button\n        data-target-class=\"coming-up-reading\"\n        data-jump-to-book=\"${book}\"\n        data-jump-to-chapter=\"${chapter}\"\n        data-jump-to-verse=\"${verse}\"\n        data-scroll=\"torah\"\n        class=\"coming-up-button\"\n      >${label}</button>\n      <time class=\"coming-up-date\" datetime=\"${datetime}\">${date}</time>\n    </div>\n  </li>\n  `\n}\n\nconst comingUpReadings = readingSchedule\n  .filter(reading => new Date(reading.datetime) > new Date())\n  .slice(0, 3)\n\nconst ComingUp = () => `\n  <section dir=\"ltr\" id=\"coming-up\" class=\"section mod-alternate mod-padding\">\n    <div class=\"stack medium\">\n      <label style=\"display: block; text-align: center; text-transform: uppercase; font-size: 0.8em; font-weight: 700; color: hsla(0, 0%, 0%, 0.5);\">Coming up</label>\n      <div style=\"overflow-x: auto;\">\n        <ol class=\"cluster\" style=\"list-style: none; display: table; margin-left: auto; margin-right: auto; white-space: nowrap;\">\n          ${comingUpReadings\n            .map(ComingUpReading)\n            .join('')\n          }\n        </ol>\n      </div>\n    </div>\n  </section>\n`\n\nconst Browse = () => `\n  <div class=\"browse\">\n    <h2 class=\"section-heading\">\u05EA\u05D5\u05E8\u05D4</h2>\n    <ol class=\"parsha-books\">\n      ${parshiyot\n        .reduce((books, parsha) => {\n          const book = parsha.ref.b\n          books[book] = books[book] || []\n          books[book].push(parsha)\n          return books\n        }, [])\n        .map(Book)\n        .join('')\n      }\n    </ol>\n\n    <h2 class=\"section-heading\">\u05DE\u05D2\u05D9\u05DC\u05D5\u05EA</h2>\n    <ol class=\"parsha-books\">\n      <li class=\"parsha-book\">\n        <ol class=\"parsha-list\">\n          ${Parsha({ ref: { b: 1, c: 1, v: 1 }, he: '\u05D0\u05E1\u05EA\u05E8', scroll: 'esther' })}\n        </ol>\n      </li>\n    </ol>\n  </div>\n`\n\nconst ParshaPicker = (search, searchEmitter, jumpToRef) => {\n  const self = htmlToElement(`\n    <div class=\"parsha-picker\">\n      <div class=\"stack xlarge\">\n        <div class=\"centerize\">\n          <div id=\"search\" style=\"display: inline-block;\"></div>\n        </div>\n        ${ComingUp()}\n        ${Browse()}\n      </div>\n    </div>\n  `)\n\n  searchEmitter.on('selection', (selected) => {\n    gtag('event', 'search_selection', {\n      event_category: 'navigation',\n      event_label: selected.querySelector('[data-target-class=\"result-hebrew\"]').textContent.trim()\n    })\n\n    const result = selected.querySelector('[data-target-class=\"parsha-result\"]')\n\n    jumpToRef({ ref: result, scroll: result.getAttribute('data-scroll') })\n  })\n\n  searchEmitter.on('search', query => {\n    self.querySelector('.browse').classList.add('u-hidden')\n    self.querySelector('#coming-up').classList.add('u-hidden')\n    gtag('event', 'search', {\n      event_category: 'navigation',\n      event_label: query\n    })\n  })\n\n  searchEmitter.on('clear', () => {\n    self.querySelector('.browse').classList.remove('u-hidden')\n    self.querySelector('#coming-up').classList.remove('u-hidden')\n  })\n\n  self.querySelector('#search').parentNode.replaceChild(search, self.querySelector('#search'))\n\n  ;[...self.querySelectorAll('[data-target-id=\"parsha\"]')]\n    .forEach((parsha) => {\n      parsha.addEventListener('click', (e) => {\n        gtag('event', 'browse_selection', {\n          event_category: 'navigation',\n          event_label: e.target.textContent.trim()\n        })\n        jumpToRef({ ref: e.target, scroll: e.target.getAttribute('data-scroll') })\n      })\n    })\n\n  ;[...self.querySelectorAll('[data-target-class=\"coming-up-reading\"]')]\n    .forEach(comingUpReading => {\n      comingUpReading.addEventListener('click', e => {\n        gtag('event', 'coming_up_selection', {\n          event_category: 'navigation',\n          event_label: e.target.textContent.trim()\n        })\n\n        jumpToRef({ ref: e.target, scroll: e.target.getAttribute('data-scroll') })\n      })\n    })\n\n  return self\n}\n\nconst searchables = [\n  ...parshiyot.map(p => ({ ...p, scroll: 'torah' })),\n  {\n    he: '\u05D0\u05E1\u05EA\u05E8',\n    en: 'Esther',\n    ref: { b: 1, c: 1, v: 1 },\n    scroll: 'esther'\n  }\n]\n\nconst searchResults = (query) => {\n  const results = fuzzy(searchables, query, parsha => [parsha.he, parsha.en])\n\n  return results.length ? results : [{\n    item: 'No results',\n    match: { index: 0, indexes: [] }\n  }]\n}\n\nconst top = (n) => (_, i) => i < n\n\nconst search = query => searchResults(query)\n  .filter(top(5))\n  .map(result => result.item === 'No results'\n    ? NoResults()\n    : ParshaResult(result)\n  )\n\nexport { search }\n\nexport default ParshaPicker\n", "/* global gtag */\n\nimport parshiyot from '../build/parshiyot.json'\nimport readingSchedule from '../build/schedule.json'\nimport fuzzy from '../src/fuzzy'\nimport utils from './utils'\nimport ParshaResult, { NoResults } from './ParshaResult'\n\nconst { htmlToElement } = utils\n\nconst Parsha = ({ ref, he, scroll }) => `\n  <li\n    class=\"parsha\"\n    data-target-id=\"parsha\"\n    data-jump-to-book=\"${ref.b}\"\n    data-jump-to-chapter=\"${ref.c}\"\n    data-jump-to-verse=\"${ref.v}\"\n    data-scroll=\"${scroll}\"\n  >\n    ${he}\n  </li>\n  `\n\nconst Book = (book) => `\n  <li class=\"parsha-book\">\n    <ol class=\"parsha-list\">\n      ${book.map(b => Parsha({ ...b, scroll: 'torah' })).join('')}\n    </ol>\n  </li>\n`\n\nconst refFromLabel = ({ label }) => parshiyot\n  .find(({ he }) => label.startsWith(he))\n  .ref\n\nconst ComingUpReading = ({ label, date, datetime }) => {\n  const { b: book, c: chapter, v: verse } = refFromLabel({ label })\n  return `\n  <li style=\"display: table-cell; width: calc(100% / 3); padding: 0 0.5em;\">\n    <div class=\"stack small\" style=\"display: flex; flex-direction: column; align-items: center;\">\n      <button\n        data-target-class=\"coming-up-reading\"\n        data-jump-to-book=\"${book}\"\n        data-jump-to-chapter=\"${chapter}\"\n        data-jump-to-verse=\"${verse}\"\n        data-scroll=\"torah\"\n        class=\"coming-up-button\"\n      >${label}</button>\n      <time class=\"coming-up-date\" datetime=\"${datetime}\">${date}</time>\n    </div>\n  </li>\n  `\n}\n\nconst comingUpReadings = readingSchedule\n  .filter(reading => new Date(reading.datetime) > new Date())\n  .slice(0, 3)\n\nconst ComingUp = () => `\n  <section dir=\"ltr\" id=\"coming-up\" class=\"section mod-alternate mod-padding\">\n    <div class=\"stack medium\">\n      <label style=\"display: block; text-align: center; text-transform: uppercase; font-size: 0.8em; font-weight: 700; color: hsla(0, 0%, 0%, 0.5);\">Coming up</label>\n      <div style=\"overflow-x: auto;\">\n        <ol class=\"cluster\" style=\"list-style: none; display: table; margin-left: auto; margin-right: auto; white-space: nowrap;\">\n          ${comingUpReadings\n            .map(ComingUpReading)\n            .join('')\n          }\n        </ol>\n      </div>\n    </div>\n  </section>\n`\n\nconst Browse = () => `\n  <div class=\"browse\">\n    <h2 class=\"section-heading\">\u05EA\u05D5\u05E8\u05D4</h2>\n    <ol class=\"parsha-books\">\n      ${parshiyot\n        .reduce((books, parsha) => {\n          const book = parsha.ref.b\n          books[book] = books[book] || []\n          books[book].push(parsha)\n          return books\n        }, [])\n        .map(Book)\n        .join('')\n      }\n    </ol>\n\n    <h2 class=\"section-heading\">\u05DE\u05D2\u05D9\u05DC\u05D5\u05EA</h2>\n    <ol class=\"parsha-books\">\n      <li class=\"parsha-book\">\n        <ol class=\"parsha-list\">\n          ${Parsha({ ref: { b: 1, c: 1, v: 1 }, he: '\u05D0\u05E1\u05EA\u05E8', scroll: 'esther' })}\n        </ol>\n      </li>\n    </ol>\n  </div>\n`\n\nconst ParshaPicker = (search, searchEmitter, jumpToRef) => {\n  const self = htmlToElement(`\n    <div class=\"parsha-picker\">\n      <div class=\"stack xlarge\">\n        <div class=\"centerize\">\n          <div id=\"search\" style=\"display: inline-block;\"></div>\n        </div>\n        ${ComingUp()}\n        ${Browse()}\n      </div>\n    </div>\n  `)\n\n  searchEmitter.on('selection', (selected) => {\n    gtag('event', 'search_selection', {\n      event_category: 'navigation',\n      event_label: selected.querySelector('[data-target-class=\"result-hebrew\"]').textContent.trim()\n    })\n\n    const result = selected.querySelector('[data-target-class=\"parsha-result\"]')\n\n    jumpToRef({ ref: result, scroll: result.getAttribute('data-scroll') })\n  })\n\n  searchEmitter.on('search', query => {\n    self.querySelector('.browse').classList.add('u-hidden')\n    self.querySelector('#coming-up').classList.add('u-hidden')\n    gtag('event', 'search', {\n      event_category: 'navigation',\n      event_label: query\n    })\n  })\n\n  searchEmitter.on('clear', () => {\n    self.querySelector('.browse').classList.remove('u-hidden')\n    self.querySelector('#coming-up').classList.remove('u-hidden')\n  })\n\n  self.querySelector('#search').parentNode.replaceChild(search, self.querySelector('#search'))\n\n  ;[...self.querySelectorAll('[data-target-id=\"parsha\"]')]\n    .forEach((parsha) => {\n      parsha.addEventListener('click', (e) => {\n        gtag('event', 'browse_selection', {\n          event_category: 'navigation',\n          event_label: e.target.textContent.trim()\n        })\n        jumpToRef({ ref: e.target, scroll: e.target.getAttribute('data-scroll') })\n      })\n    })\n\n  ;[...self.querySelectorAll('[data-target-class=\"coming-up-reading\"]')]\n    .forEach(comingUpReading => {\n      comingUpReading.addEventListener('click', e => {\n        gtag('event', 'coming_up_selection', {\n          event_category: 'navigation',\n          event_label: e.target.textContent.trim()\n        })\n\n        jumpToRef({ ref: e.target, scroll: e.target.getAttribute('data-scroll') })\n      })\n    })\n\n  return self\n}\n\nconst searchables = [\n  ...parshiyot.map(p => ({ ...p, scroll: 'torah' })),\n  {\n    he: '\u05D0\u05E1\u05EA\u05E8',\n    en: 'Esther',\n    ref: { b: 1, c: 1, v: 1 },\n    scroll: 'esther'\n  }\n]\n\nconst searchResults = (query) => {\n  const results = fuzzy(searchables, query, parsha => [parsha.he, parsha.en])\n\n  return results.length ? results : [{\n    item: 'No results',\n    match: { index: 0, indexes: [] }\n  }]\n}\n\nconst top = (n) => (_, i) => i < n\n\nconst search = query => searchResults(query)\n  .filter(top(5))\n  .map(result => result.item === 'No results'\n    ? NoResults()\n    : ParshaResult(result)\n  )\n\nexport { search }\n\nexport default ParshaPicker\n", "import utils from './utils'\n\nconst { htmlToElement } = utils\n\nconst setSelected = (list, adjustSelected) => {\n  const items = [...list.querySelectorAll('[data-target-class=\"list-item\"]')]\n\n  const selectedIndex = Math.max(items.findIndex(item => item.getAttribute('data-selected') === 'true'), 0)\n\n  const selected = items[selectedIndex]\n\n  selected.removeAttribute('data-selected')\n\n  const nextIndex = (adjustSelected(selectedIndex) + items.length) % items.length\n\n  items[nextIndex].setAttribute('data-selected', 'true')\n}\n\nexport { setSelected }\n\nconst getSelected = (list) => list.querySelector('[data-target-class=\"list-item\"][data-selected=\"true\"]')\n\nexport { getSelected }\n\nconst SelectList = (items, el, onSelect) => {\n  const list = htmlToElement(`\n    <ol class=\"list\"></ol>\n  `)\n\n  items.forEach(item => {\n    const listItem = htmlToElement('<li class=\"list-item\" data-target-class=\"list-item\"></li>')\n    listItem.appendChild(item)\n    listItem.addEventListener('click', () => {\n      onSelect(listItem)\n    })\n    list.appendChild(listItem)\n  })\n\n  list\n    .querySelector('[data-target-class=\"list-item\"]')\n    .setAttribute('data-selected', 'true')\n\n  return list\n}\n\nexport default SelectList\n", "import utils from './utils'\n\nconst { htmlToElement } = utils\n\nconst setSelected = (list, adjustSelected) => {\n  const items = [...list.querySelectorAll('[data-target-class=\"list-item\"]')]\n\n  const selectedIndex = Math.max(items.findIndex(item => item.getAttribute('data-selected') === 'true'), 0)\n\n  const selected = items[selectedIndex]\n\n  selected.removeAttribute('data-selected')\n\n  const nextIndex = (adjustSelected(selectedIndex) + items.length) % items.length\n\n  items[nextIndex].setAttribute('data-selected', 'true')\n}\n\nexport { setSelected }\n\nconst getSelected = (list) => list.querySelector('[data-target-class=\"list-item\"][data-selected=\"true\"]')\n\nexport { getSelected }\n\nconst SelectList = (items, el, onSelect) => {\n  const list = htmlToElement(`\n    <ol class=\"list\"></ol>\n  `)\n\n  items.forEach(item => {\n    const listItem = htmlToElement('<li class=\"list-item\" data-target-class=\"list-item\"></li>')\n    listItem.appendChild(item)\n    listItem.addEventListener('click', () => {\n      onSelect(listItem)\n    })\n    list.appendChild(listItem)\n  })\n\n  list\n    .querySelector('[data-target-class=\"list-item\"]')\n    .setAttribute('data-selected', 'true')\n\n  return list\n}\n\nexport default SelectList\n", "import utils from './utils'\n\nconst { htmlToElement } = utils\n\nconst setSelected = (list, adjustSelected) => {\n  const items = [...list.querySelectorAll('[data-target-class=\"list-item\"]')]\n\n  const selectedIndex = Math.max(items.findIndex(item => item.getAttribute('data-selected') === 'true'), 0)\n\n  const selected = items[selectedIndex]\n\n  selected.removeAttribute('data-selected')\n\n  const nextIndex = (adjustSelected(selectedIndex) + items.length) % items.length\n\n  items[nextIndex].setAttribute('data-selected', 'true')\n}\n\nexport { setSelected }\n\nconst getSelected = (list) => list.querySelector('[data-target-class=\"list-item\"][data-selected=\"true\"]')\n\nexport { getSelected }\n\nconst SelectList = (items, el, onSelect) => {\n  const list = htmlToElement(`\n    <ol class=\"list\"></ol>\n  `)\n\n  items.forEach(item => {\n    const listItem = htmlToElement('<li class=\"list-item\" data-target-class=\"list-item\"></li>')\n    listItem.appendChild(item)\n    listItem.addEventListener('click', () => {\n      onSelect(listItem)\n    })\n    list.appendChild(listItem)\n  })\n\n  list\n    .querySelector('[data-target-class=\"list-item\"]')\n    .setAttribute('data-selected', 'true')\n\n  return list\n}\n\nexport default SelectList\n", "import utils from './utils'\nimport SelectList, { setSelected, getSelected } from './SelectList'\n\nconst { htmlToElement: html, whenKey, purgeNode } = utils\n\nconst Search = ({ search, emitter }) => {\n  let list\n\n  const self = html(`\n    <div class=\"search\">\n      <div class=\"search-bar\">\n        <span class=\"search-icon\">\u26B2</span>\n        <input class=\"search-input\" placeholder=\"Search...\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" autofocus />\n      </div>\n      <div class=\"search-results u-hidden\">\n      </div>\n    </div>\n  `)\n\n  self.addEventListener('keydown', whenKey('Enter', () => {\n    emitter.emit('selection', getSelected(list))\n  }))\n\n  const onSelect = item => emitter.emit('selection', item)\n\n  ;[\n    { key: 'ArrowDown', adjustment: selected => selected + 1 },\n    { key: 'ArrowUp', adjustment: selected => selected - 1 },\n    { key: { key: 'n', ctrl: true }, adjustment: selected => selected + 1 },\n    { key: { key: 'p', ctrl: true }, adjustment: selected => selected - 1 }\n  ].forEach(({ key, adjustment }) => self.addEventListener('keydown', whenKey(key, e => {\n    e.preventDefault()\n    setSelected(list, adjustment)\n  })))\n\n  const searchInput = self.querySelector('.search-input')\n  const searchResults = self.querySelector('.search-results')\n\n  searchInput.addEventListener('input', (e) => {\n    const query = e.target.value\n\n    purgeNode(searchResults)\n\n    if (query) {\n      emitter.emit('search', query)\n      const results = search(query)\n      list = SelectList(results, searchInput, onSelect)\n\n      searchResults.appendChild(list)\n      searchResults.classList.remove('u-hidden')\n    } else {\n      emitter.emit('clear')\n      searchResults.classList.add('u-hidden')\n    }\n  })\n\n  self.focus = () => {\n    searchInput.focus()\n  }\n\n  return self\n}\n\nexport default Search\n", "/* global gtag */\n\nimport EventEmitter from './src/event-emitter'\nimport { InfiniteScroller, IntegerIterator, title as getTitle, physicalLocationFromRef } from './src'\nimport Page from './components/Page'\nimport ParshaPicker, { search } from './components/ParshaPicker'\nimport Search from './components/Search'\nimport utils from './components/utils'\nimport pageTitles from './build/page-titles.json'\n\nconst { htmlToElement, whenKey, purgeNode } = utils\n\nconst insertBefore = (parent, child) => {\n  parent.insertAdjacentElement('afterbegin', child)\n}\n\nconst insertAfter = (parent, child) => {\n  parent.insertAdjacentElement('beforeend', child)\n}\n\nlet isShowingParshaPicker = false\n\nlet scroll\n\nconst renderTitle = ({ title }) => {\n  document.querySelector('[data-target-id=\"parsha-title\"]').innerHTML = title\n}\n\nconst makePageNode = ({ title }) => {\n  const node = document.createElement('div')\n  node.classList.add('tikkun-page')\n  node.setAttribute('data-page-title', title)\n\n  return node\n}\n\nconst scrollToLine = ({ node, lineIndex }) => {\n  const lines = [...node.querySelectorAll('.line')]\n\n  const line = lines[lineIndex]\n\n  const book = document.querySelector('.tikkun-book')\n\n  book.scrollTop = line.offsetTop + (line.offsetHeight / 2) - (book.offsetHeight / 2)\n}\n\nconst app = {\n  jumpTo: ({ ref, scroll: _scroll }) => {\n    scroll = (_scroll === 'esther' ? EstherScroll : TorahScroll).new({ startingAtRef: ref })\n\n    purgeNode(document.querySelector('[data-target-id=\"tikkun-book\"]'))\n\n    scroll.fetchNext()\n      .then(renderNext)\n      .then((pageNode) => {\n        scrollToLine({ node: pageNode, lineIndex: scroll.startingLineNumber - 1 })\n      })\n\n    toggleParshaPicker()\n\n    return Promise.resolve()\n  }\n}\n\nconst refOf = element => {\n  const refPart = (part) => Number(element.getAttribute(`data-jump-to-${part}`))\n\n  return { b: refPart('book'), c: refPart('chapter'), v: refPart('verse') }\n}\n\nconst showParshaPicker = () => {\n  const searchEmitter = EventEmitter.new()\n\n  const s = Search({ search, emitter: searchEmitter })\n  const jumper = ParshaPicker(s, searchEmitter, ({ ref, scroll }) => app.jumpTo({ ref: refOf(ref), scroll }))\n  document.querySelector('#js-app').appendChild(jumper)\n  gtag('event', 'view', {\n    event_category: 'navigation'\n  })\n\n  setTimeout(() => s.focus(), 0)\n}\n\nconst toggleParshaPicker = () => {\n  isShowingParshaPicker = !isShowingParshaPicker\n\n  ;[\n    '[data-test-id=\"annotations-toggle\"]',\n    '[data-target-id=\"repo-link\"]',\n    '[data-target-id=\"tikkun-book\"]'\n  ]\n    .map(selector => document.querySelector(selector))\n    .map(el => el.classList)\n    .forEach(classList => {\n      classList.toggle('u-hidden')\n      classList.toggle('mod-animated')\n    })\n\n  if (isShowingParshaPicker) {\n    showParshaPicker()\n  } else {\n    document.querySelector('#js-app').removeChild(document.querySelector('.parsha-picker'))\n  }\n}\n\nconst toggleAnnotations = (getPreviousCheckedState) => {\n  const toggle = document.querySelector('[data-target-id=\"annotations-toggle\"]')\n\n  toggle.checked = !getPreviousCheckedState()\n\n  const book = document.querySelector('[data-target-id=tikkun-book]')\n\n  book.classList.toggle('mod-annotations-on', toggle.checked)\n  book.classList.toggle('mod-annotations-off', !toggle.checked)\n}\n\nconst updatePageTitle = () => {\n  const bookBoundingRect = document.querySelector('.tikkun-book').getBoundingClientRect()\n\n  const centerOfBookRelativeToViewport = {\n    x: bookBoundingRect.left + (bookBoundingRect.width / 2),\n    y: bookBoundingRect.top + (bookBoundingRect.height / 2)\n  }\n\n  const pageAtCenter = [...document.elementsFromPoint(centerOfBookRelativeToViewport.x, centerOfBookRelativeToViewport.y)]\n    .find(el => el.className.includes('tikkun-page'))\n\n  renderTitle({ title: pageAtCenter.getAttribute('data-page-title') })\n}\n\nlet lastCalled = Date.now()\nconst throttle = f => {\n  if (Date.now() - lastCalled > 300) {\n    lastCalled = Date.now()\n    f()\n  }\n}\n\nconst renderPage = ({ insertStrategy: insert }) => ({ content, title }) => {\n  const node = makePageNode({ title })\n\n  insert(document.querySelector('[data-target-id=\"tikkun-book\"]'), node)\n\n  const el = htmlToElement(Page(content))\n\n  const firstChild = node.firstChild\n  if (firstChild) {\n    node.replaceChild(el, firstChild)\n  } else {\n    node.appendChild(el)\n  }\n\n  renderTitle({ title })\n\n  return node\n}\n\nconst renderPrevious = renderPage({ insertStrategy: insertBefore })\nconst renderNext = renderPage({ insertStrategy: insertAfter })\n\nconst fetchPage = ({ path, title }) => window.fetch(path)\n  .then((res) => res.json())\n  .then((page) => ({ content: page, title }))\n  .catch((err) => {\n    console.error(err)\n  })\n\nconst Scroll = {\n  new: ({ scroll, makePath, makeTitle, startingAtRef = { b: 1, c: 1, v: 1 } }) => {\n    const { pageNumber, lineNumber } = physicalLocationFromRef({ ref: startingAtRef, scroll })\n\n    const iterator = IntegerIterator.new({ startingAt: pageNumber })\n\n    return {\n      fetchPrevious: () => {\n        const n = iterator.previous()\n        if (n <= 0) return Promise.resolve()\n        return fetchPage({ path: makePath(n), title: makeTitle(n) })\n      },\n      fetchNext: () => {\n        const n = iterator.next()\n        return fetchPage({ path: makePath(n), title: makeTitle(n) })\n      },\n      startingLineNumber: lineNumber\n    }\n  }\n}\n\nconst TorahScroll = {\n  new: ({ startingAtRef }) => {\n    return Scroll.new({\n      scroll: 'torah',\n      makePath: n => `/build/pages/${n}.json`,\n      makeTitle: n => getTitle(pageTitles[n - 1]),\n      startingAtRef\n    })\n  }\n}\n\nconst EstherScroll = {\n  new: ({ startingAtRef }) => {\n    return Scroll.new({\n      scroll: 'esther',\n      makePath: n => `/build/pages/${n}-esther.json`,\n      makeTitle: n => '\u05D0\u05E1\u05EA\u05E8',\n      startingAtRef\n    })\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const book = document.querySelector('[data-target-id=\"tikkun-book\"]')\n  const toggle = document.querySelector('[data-target-id=\"annotations-toggle\"]')\n\n  InfiniteScroller\n    .new({\n      container: book,\n      fetchPreviousContent: { fetch: () => scroll.fetchPrevious(), render: renderPrevious },\n      fetchNextContent: { fetch: () => scroll.fetchNext(), render: renderNext }\n    })\n    .attach()\n\n  book.addEventListener('scroll', () => {\n    throttle(() => updatePageTitle())\n  })\n\n  toggle.addEventListener('change', (e) => toggleAnnotations(() => !e.target.checked))\n\n  document.addEventListener('keydown', whenKey('Shift', () => toggleAnnotations(() => toggle.checked)))\n  document.addEventListener('keyup', whenKey('Shift', () => toggleAnnotations(() => toggle.checked)))\n\n  document.querySelector('[data-target-id=\"parsha-title\"]').addEventListener('click', toggleParshaPicker)\n  document.addEventListener('keydown', whenKey('/', toggleParshaPicker))\n\n  app.jumpTo({ ref: { b: 1, c: 1, v: 1 }, scroll: 'torah' })\n    .then(toggleParshaPicker)\n})\n"],
  "mappings": "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",
  "names": []
}
